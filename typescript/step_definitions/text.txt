import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://the-roost-agentartificial.ngrok.app/');
  await page.getByRole('button', { name: 'Authorize' }).click();
  await page.getByRole('textbox').fill('sk-1234');
  await page.getByRole('textbox').press('Enter');
  await page.locator('div').filter({ hasText: /^Available authorizations$/ }).click();
  await page.locator('div').filter({ hasText: /^Available authorizations$/ }).getByRole('button').click();
  await page.getByRole('button', { name: 'Authorize' }).click();
  await expect(page.locator('form')).toContainText('APIKeyHeader (apiKey)AuthorizedName: AuthorizationIn: headerValue: ******');
  await page.locator('div').filter({ hasText: /^Available authorizations$/ }).getByRole('button').click();
  await page.getByText('POST/v1/api/textPost Request').click();
  await page.getByRole('button', { name: 'Try it out' }).click();
  await page.getByText('{ "images": [ "string" ], "').click();
  await page.getByText('{ "images": [ "string" ], "').dblclick();
  await page.getByText('{ "images": [ "string" ], "').press('ArrowUp');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowUp');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowUp');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowUp');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowUp');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowRight');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowRight');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowRight');
  await page.getByText('{ "images": [ "string" ], "').press('ArrowRight');
  await page.getByText('{ "images": [ "string" ], "').fill('{\n  "images": [\n    ""\n  ],\n  "streaming": true,\n  "prompt": "string",\n  "model": "string"\n}');
  await page.getByText('{ "images": [ "" ], "').press('ArrowDown');
  await page.getByText('{ "images": [ "" ], "').press('ArrowLeft');
  await page.getByText('{ "images": [ "" ], "').fill('{\n  "images": [\n    ""\n  ],\n  "streaming": true,\n  "prompt": "hi there",\n  "model": "mixtral"\n}');
  await page.getByRole('button', { name: 'Execute' }).click();
  await page.getByRole('button', { name: 'Execute' }).click();
  await expect(page.getByRole('table')).toContainText('Error: response status is 500');
});